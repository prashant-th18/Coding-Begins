We will take the input of the number as a string because no number data-type is able to correctly store such a huge number. Suppose the number is stored in string $s$.
So,
$s = a_0a_1a_2...a_{n-1}$ where n is equal to the length of the number.
Let's pick a digit from this number: $a_i$$(0 \leq i \leq n - 1)$
Assume a number $t$ where $t = n - 1 - i$
Consider two ranges,
left = $[0, i - 1]$ and right = $[i + 1, n - 1]$ $(i = $number of digits in the left range & $t =$ number of digits in the right range$)$
We will break down the solution into two cases for better understanding

Case 1:
In magic operation, we haven't removed any digits from the right range. How will $a_i$ contribute to the decimal representation of our resulting number?
For eg: Let's say the number is $1234$. And assume $a_i = 2$, then if we don't remove digit 3 and 4, (i.e. the number of digits after $a_i$ is the same) then, 2 will contribute as $2*(10^2)$
Or in terms of i and t, a_i will contribute as a_i*(10 ^ t)

Consider how the left range can contribute in this answer. As you can see, whether I remove any number from the left range or not, the power of 10 for $a_i$ remains the same.

$C(n, r)$ means the number of ways where r objects chosen from n objects and the order is not important.
So,
the number of ways to remove 1 digit from left range is $C(i, 1)
...
the number of ways to remove i digits from left range is $C(i, i)$
But is it possible to not remove any digit from the left range?
No, because if we do this, it means we haven't taken away any of the digits from the whole number, which goes against the condition in the problem.
So what is the total number of ways of removing digits from the left range: $C(i,1)+...+C(i,i) = 2^i - 1$

Case 2:
Let's say, in magic operation, we removed some digits from the right range.

So,
the number of ways to remove 1 digit from right range is $C(t, 1)$,
After removing 1 digit from the right range, $a_i$  in the final number will contribute as $a_i*(10^{t-1})$
For eg:

If I delete 4 from 1234, it becomes 123, therefore 2 now contributes as $2*10^1$,  whereas it previously contributed as $2*(10^2)$
So, from the right range I can get total answer as $C(t,1)*a_i*(10^{t-1})$
What about left range?
Since we took one digit out of the right range, now from the left range, we can remove 0 digit, 1 digit, ...$i$ digits

Therefore, left range is contributing as: $C(i, 0) + C(i, 1) + ... + C(i, i) = 2^i$
So, total number of ways in which $a_i$  will contribute if we removed 1 digit from left range is $2^i*(C(t, 1) * a_i * 10^{t-1})$
But this is only true if only 1 digit is taken away.

So, for all scenarios in which we remove digits from 1 for t from the right range, the final answer is:

$2^i \cdot (C(t, 1) \cdot a_i \cdot 10^{t - 1})$ + $2^i \cdot (C(t, 2) \cdot a_i \cdot 10^{t - 2})$ + ... + $2^i \cdot (C(t, t) \cdot a_i \cdot 10^{t - t})$

The final answer for Case 2 is: $2^i*$$(C(t, 1) \cdot a_i \cdot 10^{t -1} + .. + C(t, t) \cdot a_i \cdot 10^0)$
Now adding answers of Case-1 & Case-2 for total answer for $a_i$
$(2^i - 1) \cdot a_i \cdot (10^t) + 2^i \cdot (C(t, 1) \cdot a_i \cdot 10^{t - 1} + .. + C(t, t) \cdot a_i \cdot 10^0)$
This equation can be changed to:
$a_i \cdot ((C(t, 0) \cdot 10^t + C(t, 1) \cdot 10^{t - 1}+ .. + C(t, t) \cdot 10^0) \cdot (2^i) - C(t, 0) \cdot (10^t))$
which is equal to:
a_i * (((10 + 1) ^ t) \cdot (2^i) - 10^t) \href{en.wikipedia.org/wiki/Binomial_theorem#:~:text=According%20to%20the%20theorem%2C%20it%20is%20possible%20to%20expand%20any%20nonnegative%20integer%20power%20of%20x%20%2B%20y%20into%20a%20sum%20of%20the%20form}{How?}
$=  a_i \cdot ((11^t) \cdot (2^i) - (10^t))$
Compute this for every $i(0 \leq i \leq n - 1)$, and add all of them.


